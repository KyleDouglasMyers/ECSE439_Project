[comment encoding = UTF-8 /]
[module generate('http://www.xtext.org/airlineregistration/Air')]


[template public generate(aModel : Model)]
[comment @main/]
[file ('Air.html', false, 'UTF-8')]
<!doctype html>
<html lang="en">
<head>
	<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>

<h2>Passenger Flights</h2>
<input type="text" id="passengerInput" onkeyup="passengerFilter()" placeholder="Enter Passenger Name...">
<table id="passengerFlightsTable">
  	<tr class="header">
		<th>Passenger Name</th>
		<th>Flight Number</th>
	    <th>Departing from</th>
		<th>Arriving at</th>
		<th>on</th>
		<th>at</th>
  	</tr>
	
	
  	[for (aEntity : Entity | aModel.entities)]
  	[if (aEntity.eClass() = "Passenger")]
  	[for (aFlight : SpecificFlight | aEntity.oclAsType(Passenger).specificFlight)]
    	<tr>
			<td>[aEntity.oclAsType(Passenger).paname/]</td>	
			<td>[aFlight.fname/]</td>
			<td>[aFlight.scheduledFlight.from.aname/]</td>
			<td>[aFlight.scheduledFlight.to.aname/]</td>
			<td>[aFlight.date/]</td>			
			<td>[aFlight.scheduledFlight.time/]</td>
		</tr>
	[/for]
	[/if]
  	[/for]
</table>

<h2>Flight Details</h2>
<input type="text" id="flightInput" onkeyup="flightDetailsFilter()" placeholder="Filter by flight number..">
<table id="flightDetailsTable">
  	<tr class="header">
		<th>Flight Number</th>
	    <th>Departure Airport</th>
		<th>Arrival Airport</th>
		<th>Airline</th>
		<th>Date</th>
		<th>Time</th>
		<th>Pilot</th>
		<th>Airplane Type</th>
		<th>Staff</th>
  	</tr>
	
	
  	[for (aEntity : Entity | aModel.entities)]
  	[if (aEntity.eClass() = "SpecificFlight")]
    	<tr>
			<td>[aEntity.oclAsType(SpecificFlight).fname/]</td>
			<td>[aEntity.oclAsType(SpecificFlight).scheduledFlight.from.aname/]</td>
			<td>[aEntity.oclAsType(SpecificFlight).scheduledFlight.to.aname/]</td>
			<td>[aEntity.oclAsType(SpecificFlight).scheduledFlight.airline.name/]</td>
			<td>[aEntity.oclAsType(SpecificFlight).date/]</td>			
			<td>[aEntity.oclAsType(SpecificFlight).scheduledFlight.time/]</td>
			<td>[aEntity.oclAsType(SpecificFlight).pilot.piname/]</td>
			<td>[aEntity.oclAsType(SpecificFlight).plane.type/]</td>
			<td>[aEntity.oclAsType(SpecificFlight).staff -> collect(s | s.faname.concat(', '))/]</td>
		</tr>
	[/if]
  	[/for]
</table>

<script type="text/javascript">
function myFilter(inputStr, tableStr) {
  	var input, filter, table, tr, td, i, txtValue;
  	input = document.getElementById(inputStr);
  	filter = input.value.toUpperCase();
  	table = document.getElementById(tableStr);
  	tr = table.getElementsByTagName("tr");
  	for (i = 0; i < tr.length; i++) {
	    td = tr ['['/]i].getElementsByTagName("td")['['/]0];
	    if (td) {
      	txtValue = td.textContent || td.innerText;
      	if (txtValue.toUpperCase().indexOf(filter) > -1) {
        	tr['['/]i].style.display = "";
      	} else {
	        tr['['/]i].style.display = "none";
    	  }
    	}       
  	}
}

function hidePassengers() {
  	var table, tr, i;
  	table = document.getElementById("passengerFlightsTable");
  	tr = table.getElementsByTagName("tr");
  	for (i = 1; i < tr.length; i++) {
		tr['['/]i].style.display = "none";       
  	}
}

function flightDetailsFilter() {
	myFilter("flightInput", "flightDetailsTable");
}
function passengerFilter() {
    myFilter("passengerInput", "passengerFlightsTable");
}
window.onload = hidePassengers();
</script>

<style>
th {
  border: 1px solid #000;
}

td {
  border: 1px solid #000;
  width: fit-content;
}
</style>
</body>
</html>
[/file]
[/template]

grammar org.xtext.airlineregistration.Air with org.eclipse.xtext.common.Terminals

generate air "http://www.xtext.org/airlineregistration/Air"

Model :
	entities+=Entity*;
	
Entity:
	Airport | Airline | Flight | Schedule | Employee | Airplane | Passenger
;
	
Airport :
	//Example: Airport YUL 'Pierre Trudeau'
	'Airport' name=ID aname=STRING location=STRING 
;

Airline:
	//Example: Airline AirCanada 'flights out of canada'
	'Airline' name=ID description=STRING
;

Airplane:
	'Airplane' name=ID type=STRING seats=INT
;

Flight:
	'Flight' name=ID fname=STRING 
	//Get two existing airports (from and to)
	//Get an existing airline
	//Add a time and a date
	
	//TODO: quick issue with this, can go from and to same airport probably....
	
		'from' from=[Airport]
		'to' to=[Airport]
		'with' airline=[Airline]
		'at' time=STRING
		'pilot' pilot=[Pilot]
		'airplane' plane=[Airplane]
		'staff' (staff+=[FlightAttendant]) (',' (staff+=[FlightAttendant]))*  //this might not work, need more than 1
	
;

Schedule:
	name=ID 'with' 'flights' (flights+=Flight) (',' (flights+=Flight))*
	//Get a bunch of flights, and add flights to schedule
;

Employee:
	//Super type, extend to subtypes kinda of like entity thing
	// Realte each subtype to their respective airports, or flights
	Pilot | FlightAttendant | BagHandler | GatePersonnel
;

Pilot:
	'Pilot' name=ID piname=STRING 'with' airline=[Airline]
;

FlightAttendant:
	'FlightAttendant' name=ID faname=STRING 'with' airline=[Airline]
;

BagHandler:
	'BagHandler' name=ID bhname=STRING 'with' airport=[Airport]
;

GatePersonnel:
	'GatePersonnel' name=ID gpname=STRING 'with' airport=[Airport]
;

Passenger:
	'Passenger' name=STRING paname=STRING 'with' (flight+=[Flight]) (',' (flight+=[Flight]))*
;


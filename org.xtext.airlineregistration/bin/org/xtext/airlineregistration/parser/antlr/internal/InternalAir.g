/*
 * generated by Xtext 2.26.0
 */
grammar InternalAir;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.airlineregistration.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.airlineregistration.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.airlineregistration.services.AirGrammarAccess;

}

@parser::members {

 	private AirGrammarAccess grammarAccess;

    public InternalAirParser(TokenStream input, AirGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected AirGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getEntitiesEntityParserRuleCall_0());
			}
			lv_entities_0_0=ruleEntity
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"entities",
					lv_entities_0_0,
					"org.xtext.airlineregistration.Air.Entity");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEntityAccess().getAirportParserRuleCall_0());
		}
		this_Airport_0=ruleAirport
		{
			$current = $this_Airport_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getAirlineParserRuleCall_1());
		}
		this_Airline_1=ruleAirline
		{
			$current = $this_Airline_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getFlightParserRuleCall_2());
		}
		this_Flight_2=ruleFlight
		{
			$current = $this_Flight_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getScheduleParserRuleCall_3());
		}
		this_Schedule_3=ruleSchedule
		{
			$current = $this_Schedule_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEntityAccess().getEmployeeParserRuleCall_4());
		}
		this_Employee_4=ruleEmployee
		{
			$current = $this_Employee_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleAirport
entryRuleAirport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAirportRule()); }
	iv_ruleAirport=ruleAirport
	{ $current=$iv_ruleAirport.current; }
	EOF;

// Rule Airport
ruleAirport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Airport'
		{
			newLeafNode(otherlv_0, grammarAccess.getAirportAccess().getAirportKeyword_0());
		}
		(
			(
				lv_code_1_0=RULE_ID
				{
					newLeafNode(lv_code_1_0, grammarAccess.getAirportAccess().getCodeIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAirportRule());
					}
					setWithLastConsumed(
						$current,
						"code",
						lv_code_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getAirportAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAirportRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				lv_location_3_0=RULE_STRING
				{
					newLeafNode(lv_location_3_0, grammarAccess.getAirportAccess().getLocationSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAirportRule());
					}
					setWithLastConsumed(
						$current,
						"location",
						lv_location_3_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAirline
entryRuleAirline returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAirlineRule()); }
	iv_ruleAirline=ruleAirline
	{ $current=$iv_ruleAirline.current; }
	EOF;

// Rule Airline
ruleAirline returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Airline'
		{
			newLeafNode(otherlv_0, grammarAccess.getAirlineAccess().getAirlineKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getAirlineAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAirlineRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_description_2_0=RULE_STRING
				{
					newLeafNode(lv_description_2_0, grammarAccess.getAirlineAccess().getDescriptionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAirlineRule());
					}
					setWithLastConsumed(
						$current,
						"description",
						lv_description_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleFlight
entryRuleFlight returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlightRule()); }
	iv_ruleFlight=ruleFlight
	{ $current=$iv_ruleFlight.current; }
	EOF;

// Rule Flight
ruleFlight returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Flight'
		{
			newLeafNode(otherlv_0, grammarAccess.getFlightAccess().getFlightKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFlightAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlightRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='from'
		{
			newLeafNode(otherlv_2, grammarAccess.getFlightAccess().getFromKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlightRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getFlightAccess().getFromAirportCrossReference_3_0());
				}
			)
		)
		otherlv_4='to'
		{
			newLeafNode(otherlv_4, grammarAccess.getFlightAccess().getToKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlightRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getFlightAccess().getToAirportCrossReference_5_0());
				}
			)
		)
		otherlv_6='with'
		{
			newLeafNode(otherlv_6, grammarAccess.getFlightAccess().getWithKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlightRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getFlightAccess().getAirlineAirlineCrossReference_7_0());
				}
			)
		)
		otherlv_8='at'
		{
			newLeafNode(otherlv_8, grammarAccess.getFlightAccess().getAtKeyword_8());
		}
		(
			(
				lv_time_9_0=RULE_STRING
				{
					newLeafNode(lv_time_9_0, grammarAccess.getFlightAccess().getTimeSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlightRule());
					}
					setWithLastConsumed(
						$current,
						"time",
						lv_time_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_10='pilot'
		{
			newLeafNode(otherlv_10, grammarAccess.getFlightAccess().getPilotKeyword_10());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlightRule());
					}
				}
				otherlv_11=RULE_ID
				{
					newLeafNode(otherlv_11, grammarAccess.getFlightAccess().getPilotPilotCrossReference_11_0());
				}
			)
		)
		otherlv_12='staff'
		{
			newLeafNode(otherlv_12, grammarAccess.getFlightAccess().getStaffKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFlightAccess().getStaffFlightAttendantParserRuleCall_13_0());
				}
				lv_staff_13_0=ruleFlightAttendant
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFlightRule());
					}
					add(
						$current,
						"staff",
						lv_staff_13_0,
						"org.xtext.airlineregistration.Air.FlightAttendant");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_14=','
			{
				newLeafNode(otherlv_14, grammarAccess.getFlightAccess().getCommaKeyword_14_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getFlightAccess().getStaffFlightAttendantParserRuleCall_14_1_0());
					}
					lv_staff_15_0=ruleFlightAttendant
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFlightRule());
						}
						add(
							$current,
							"staff",
							lv_staff_15_0,
							"org.xtext.airlineregistration.Air.FlightAttendant");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSchedule
entryRuleSchedule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScheduleRule()); }
	iv_ruleSchedule=ruleSchedule
	{ $current=$iv_ruleSchedule.current; }
	EOF;

// Rule Schedule
ruleSchedule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getScheduleAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScheduleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='with'
		{
			newLeafNode(otherlv_1, grammarAccess.getScheduleAccess().getWithKeyword_1());
		}
		otherlv_2='flights'
		{
			newLeafNode(otherlv_2, grammarAccess.getScheduleAccess().getFlightsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScheduleAccess().getFlightsFlightParserRuleCall_3_0());
				}
				lv_flights_3_0=ruleFlight
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScheduleRule());
					}
					add(
						$current,
						"flights",
						lv_flights_3_0,
						"org.xtext.airlineregistration.Air.Flight");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getScheduleAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScheduleAccess().getFlightsFlightParserRuleCall_4_1_0());
					}
					lv_flights_5_0=ruleFlight
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScheduleRule());
						}
						add(
							$current,
							"flights",
							lv_flights_5_0,
							"org.xtext.airlineregistration.Air.Flight");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEmployee
entryRuleEmployee returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmployeeRule()); }
	iv_ruleEmployee=ruleEmployee
	{ $current=$iv_ruleEmployee.current; }
	EOF;

// Rule Employee
ruleEmployee returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEmployeeAccess().getPilotParserRuleCall_0());
		}
		this_Pilot_0=rulePilot
		{
			$current = $this_Pilot_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEmployeeAccess().getFlightAttendantParserRuleCall_1());
		}
		this_FlightAttendant_1=ruleFlightAttendant
		{
			$current = $this_FlightAttendant_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEmployeeAccess().getBagHandlerParserRuleCall_2());
		}
		this_BagHandler_2=ruleBagHandler
		{
			$current = $this_BagHandler_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getEmployeeAccess().getGatePersonnelParserRuleCall_3());
		}
		this_GatePersonnel_3=ruleGatePersonnel
		{
			$current = $this_GatePersonnel_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePilot
entryRulePilot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPilotRule()); }
	iv_rulePilot=rulePilot
	{ $current=$iv_rulePilot.current; }
	EOF;

// Rule Pilot
rulePilot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Pilot'
		{
			newLeafNode(otherlv_0, grammarAccess.getPilotAccess().getPilotKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPilotAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPilotRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='with'
		{
			newLeafNode(otherlv_2, grammarAccess.getPilotAccess().getWithKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPilotRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getPilotAccess().getAirelineAirlineCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleFlightAttendant
entryRuleFlightAttendant returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFlightAttendantRule()); }
	iv_ruleFlightAttendant=ruleFlightAttendant
	{ $current=$iv_ruleFlightAttendant.current; }
	EOF;

// Rule FlightAttendant
ruleFlightAttendant returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='FlightAttendant'
		{
			newLeafNode(otherlv_0, grammarAccess.getFlightAttendantAccess().getFlightAttendantKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFlightAttendantAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlightAttendantRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='with'
		{
			newLeafNode(otherlv_2, grammarAccess.getFlightAttendantAccess().getWithKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFlightAttendantRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getFlightAttendantAccess().getAirelineAirlineCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleBagHandler
entryRuleBagHandler returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBagHandlerRule()); }
	iv_ruleBagHandler=ruleBagHandler
	{ $current=$iv_ruleBagHandler.current; }
	EOF;

// Rule BagHandler
ruleBagHandler returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BagHandler'
		{
			newLeafNode(otherlv_0, grammarAccess.getBagHandlerAccess().getBagHandlerKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBagHandlerAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBagHandlerRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='with'
		{
			newLeafNode(otherlv_2, grammarAccess.getBagHandlerAccess().getWithKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBagHandlerRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getBagHandlerAccess().getAirportAirlineCrossReference_3_0());
				}
			)
		)
	)
;

// Entry rule entryRuleGatePersonnel
entryRuleGatePersonnel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGatePersonnelRule()); }
	iv_ruleGatePersonnel=ruleGatePersonnel
	{ $current=$iv_ruleGatePersonnel.current; }
	EOF;

// Rule GatePersonnel
ruleGatePersonnel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GatePersonnel'
		{
			newLeafNode(otherlv_0, grammarAccess.getGatePersonnelAccess().getGatePersonnelKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getGatePersonnelAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGatePersonnelRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='with'
		{
			newLeafNode(otherlv_2, grammarAccess.getGatePersonnelAccess().getWithKeyword_2());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getGatePersonnelRule());
					}
				}
				otherlv_3=RULE_ID
				{
					newLeafNode(otherlv_3, grammarAccess.getGatePersonnelAccess().getAirportAirportCrossReference_3_0());
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

/**
 * generated by Xtext 2.26.0
 */
package org.xtext.airlineregistration.air.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.airlineregistration.air.AirPackage;
import org.xtext.airlineregistration.air.Airport;
import org.xtext.airlineregistration.air.GatePersonnel;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Gate Personnel</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.airlineregistration.air.impl.GatePersonnelImpl#getGpname <em>Gpname</em>}</li>
 *   <li>{@link org.xtext.airlineregistration.air.impl.GatePersonnelImpl#getAirport <em>Airport</em>}</li>
 * </ul>
 *
 * @generated
 */
public class GatePersonnelImpl extends EmployeeImpl implements GatePersonnel
{
  /**
   * The default value of the '{@link #getGpname() <em>Gpname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGpname()
   * @generated
   * @ordered
   */
  protected static final String GPNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getGpname() <em>Gpname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getGpname()
   * @generated
   * @ordered
   */
  protected String gpname = GPNAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getAirport() <em>Airport</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAirport()
   * @generated
   * @ordered
   */
  protected Airport airport;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected GatePersonnelImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AirPackage.Literals.GATE_PERSONNEL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getGpname()
  {
    return gpname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setGpname(String newGpname)
  {
    String oldGpname = gpname;
    gpname = newGpname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AirPackage.GATE_PERSONNEL__GPNAME, oldGpname, gpname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Airport getAirport()
  {
    if (airport != null && airport.eIsProxy())
    {
      InternalEObject oldAirport = (InternalEObject)airport;
      airport = (Airport)eResolveProxy(oldAirport);
      if (airport != oldAirport)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AirPackage.GATE_PERSONNEL__AIRPORT, oldAirport, airport));
      }
    }
    return airport;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Airport basicGetAirport()
  {
    return airport;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAirport(Airport newAirport)
  {
    Airport oldAirport = airport;
    airport = newAirport;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AirPackage.GATE_PERSONNEL__AIRPORT, oldAirport, airport));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AirPackage.GATE_PERSONNEL__GPNAME:
        return getGpname();
      case AirPackage.GATE_PERSONNEL__AIRPORT:
        if (resolve) return getAirport();
        return basicGetAirport();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AirPackage.GATE_PERSONNEL__GPNAME:
        setGpname((String)newValue);
        return;
      case AirPackage.GATE_PERSONNEL__AIRPORT:
        setAirport((Airport)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AirPackage.GATE_PERSONNEL__GPNAME:
        setGpname(GPNAME_EDEFAULT);
        return;
      case AirPackage.GATE_PERSONNEL__AIRPORT:
        setAirport((Airport)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AirPackage.GATE_PERSONNEL__GPNAME:
        return GPNAME_EDEFAULT == null ? gpname != null : !GPNAME_EDEFAULT.equals(gpname);
      case AirPackage.GATE_PERSONNEL__AIRPORT:
        return airport != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (gpname: ");
    result.append(gpname);
    result.append(')');
    return result.toString();
  }

} //GatePersonnelImpl

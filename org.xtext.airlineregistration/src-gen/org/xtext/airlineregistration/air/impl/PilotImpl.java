/**
 * generated by Xtext 2.26.0
 */
package org.xtext.airlineregistration.air.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.airlineregistration.air.AirPackage;
import org.xtext.airlineregistration.air.Airline;
import org.xtext.airlineregistration.air.Pilot;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Pilot</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.airlineregistration.air.impl.PilotImpl#getAirline <em>Airline</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PilotImpl extends EmployeeImpl implements Pilot
{
  /**
   * The cached value of the '{@link #getAirline() <em>Airline</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAirline()
   * @generated
   * @ordered
   */
  protected Airline airline;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PilotImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AirPackage.Literals.PILOT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Airline getAirline()
  {
    if (airline != null && airline.eIsProxy())
    {
      InternalEObject oldAirline = (InternalEObject)airline;
      airline = (Airline)eResolveProxy(oldAirline);
      if (airline != oldAirline)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AirPackage.PILOT__AIRLINE, oldAirline, airline));
      }
    }
    return airline;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Airline basicGetAirline()
  {
    return airline;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAirline(Airline newAirline)
  {
    Airline oldAirline = airline;
    airline = newAirline;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AirPackage.PILOT__AIRLINE, oldAirline, airline));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AirPackage.PILOT__AIRLINE:
        if (resolve) return getAirline();
        return basicGetAirline();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AirPackage.PILOT__AIRLINE:
        setAirline((Airline)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AirPackage.PILOT__AIRLINE:
        setAirline((Airline)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AirPackage.PILOT__AIRLINE:
        return airline != null;
    }
    return super.eIsSet(featureID);
  }

} //PilotImpl

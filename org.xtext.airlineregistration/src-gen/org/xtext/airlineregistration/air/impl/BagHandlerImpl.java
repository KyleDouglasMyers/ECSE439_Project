/**
 * generated by Xtext 2.26.0
 */
package org.xtext.airlineregistration.air.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.airlineregistration.air.AirPackage;
import org.xtext.airlineregistration.air.Airport;
import org.xtext.airlineregistration.air.BagHandler;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Bag Handler</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.airlineregistration.air.impl.BagHandlerImpl#getBhname <em>Bhname</em>}</li>
 *   <li>{@link org.xtext.airlineregistration.air.impl.BagHandlerImpl#getAirport <em>Airport</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BagHandlerImpl extends EmployeeImpl implements BagHandler
{
  /**
   * The default value of the '{@link #getBhname() <em>Bhname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBhname()
   * @generated
   * @ordered
   */
  protected static final String BHNAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getBhname() <em>Bhname</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBhname()
   * @generated
   * @ordered
   */
  protected String bhname = BHNAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getAirport() <em>Airport</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAirport()
   * @generated
   * @ordered
   */
  protected Airport airport;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BagHandlerImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AirPackage.Literals.BAG_HANDLER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getBhname()
  {
    return bhname;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBhname(String newBhname)
  {
    String oldBhname = bhname;
    bhname = newBhname;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AirPackage.BAG_HANDLER__BHNAME, oldBhname, bhname));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Airport getAirport()
  {
    if (airport != null && airport.eIsProxy())
    {
      InternalEObject oldAirport = (InternalEObject)airport;
      airport = (Airport)eResolveProxy(oldAirport);
      if (airport != oldAirport)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, AirPackage.BAG_HANDLER__AIRPORT, oldAirport, airport));
      }
    }
    return airport;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Airport basicGetAirport()
  {
    return airport;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAirport(Airport newAirport)
  {
    Airport oldAirport = airport;
    airport = newAirport;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AirPackage.BAG_HANDLER__AIRPORT, oldAirport, airport));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AirPackage.BAG_HANDLER__BHNAME:
        return getBhname();
      case AirPackage.BAG_HANDLER__AIRPORT:
        if (resolve) return getAirport();
        return basicGetAirport();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AirPackage.BAG_HANDLER__BHNAME:
        setBhname((String)newValue);
        return;
      case AirPackage.BAG_HANDLER__AIRPORT:
        setAirport((Airport)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AirPackage.BAG_HANDLER__BHNAME:
        setBhname(BHNAME_EDEFAULT);
        return;
      case AirPackage.BAG_HANDLER__AIRPORT:
        setAirport((Airport)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AirPackage.BAG_HANDLER__BHNAME:
        return BHNAME_EDEFAULT == null ? bhname != null : !BHNAME_EDEFAULT.equals(bhname);
      case AirPackage.BAG_HANDLER__AIRPORT:
        return airport != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (bhname: ");
    result.append(bhname);
    result.append(')');
    return result.toString();
  }

} //BagHandlerImpl
